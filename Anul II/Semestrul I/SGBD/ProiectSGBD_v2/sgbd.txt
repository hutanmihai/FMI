CREATE TABLE regions
(
    id          NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    region_name VARCHAR2(3) NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE teams
(
    id        NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    team_name VARCHAR2(100) NOT NULL,
    region_id NUMBER        NOT NULL,
    PRIMARY KEY (id),
    FOREIGN KEY (region_id) REFERENCES regions (id)
);

CREATE TABLE roles
(
    id        NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    role_name VARCHAR2(15) NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE players
(
    id            NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    first_name    VARCHAR2(50) NOT NULL,
    last_name     VARCHAR2(50) NOT NULL,
    summoner_name VARCHAR2(50) NOT NULL,
    role_id       NUMBER       NOT NULL,
    region_id     NUMBER       NOT NULL,
    team_id       NUMBER       NOT NULL,
    PRIMARY KEY (id),
    FOREIGN KEY (role_id) REFERENCES roles (id),
    FOREIGN KEY (region_id) REFERENCES regions (id),
    FOREIGN KEY (team_id) REFERENCES teams (id)
);

CREATE TABLE tournaments
(
    id              NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    tournament_name VARCHAR2(100) NOT NULL,
    start_date      DATE          NOT NULL,
    end_date        DATE          NOT NULL,
    location        VARCHAR2(100) NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE matches
(
    id            NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    tournament_id NUMBER NOT NULL,
    team1_id      NUMBER NOT NULL,
    team2_id      NUMBER NOT NULL,
    match_date    DATE   NOT NULL,
    PRIMARY KEY (id),
    FOREIGN KEY (tournament_id) REFERENCES tournaments (id),
    FOREIGN KEY (team1_id) REFERENCES teams (id),
    FOREIGN KEY (team2_id) REFERENCES teams (id)
);

CREATE TABLE match_results
(
    id              NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    match_id        NUMBER NOT NULL,
    winning_team_id NUMBER NOT NULL,
    PRIMARY KEY (id),
    FOREIGN KEY (match_id) REFERENCES matches (id),
    FOREIGN KEY (winning_team_id) REFERENCES teams (id),
    UNIQUE (match_id)
);

CREATE TABLE player_statistics
(
    id        NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    player_id NUMBER NOT NULL,
    match_id  NUMBER NOT NULL,
    kills     NUMBER NOT NULL,
    deaths    NUMBER NOT NULL,
    assists   NUMBER NOT NULL,
    cs        NUMBER NOT NULL,
    PRIMARY KEY (id),
    FOREIGN KEY (player_id) REFERENCES players (id),
    FOREIGN KEY (match_id) REFERENCES matches (id),
    UNIQUE (player_id, match_id)
);

CREATE TABLE champions
(
    id            NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    champion_name VARCHAR2(50) NOT NULL,
    role_id       NUMBER       NOT NULL,
    PRIMARY KEY (id),
    FOREIGN KEY (role_id) REFERENCES roles (id)
);

CREATE TABLE champion_picks
(
    id          NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    match_id    NUMBER NOT NULL,
    player_id   NUMBER NOT NULL,
    champion_id NUMBER NOT NULL,
    PRIMARY KEY (id),
    FOREIGN KEY (match_id) REFERENCES matches (id),
    FOREIGN KEY (player_id) REFERENCES players (id),
    FOREIGN KEY (champion_id) REFERENCES champions (id),
    UNIQUE (match_id, player_id)
);

CREATE TABLE bans
(
    id          NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    match_id    NUMBER NOT NULL,
    champion_id NUMBER NOT NULL,
    PRIMARY KEY (id),
    FOREIGN KEY (match_id) REFERENCES matches (id),
    FOREIGN KEY (champion_id) REFERENCES champions (id),
    UNIQUE (match_id, champion_id)
);

INSERT INTO regions (region_name)
VALUES ('NA');
INSERT INTO regions (region_name)
VALUES ('EU');
INSERT INTO regions (region_name)
VALUES ('KR');
INSERT INTO regions (region_name)
VALUES ('AS');
INSERT INTO regions (region_name)
VALUES ('TUR');
COMMIT;

INSERT INTO teams (team_name, region_id)
VALUES ('TSM', 1);
INSERT INTO teams (team_name, region_id)
VALUES ('Fnatic', 2);
INSERT INTO teams (team_name, region_id)
VALUES ('SK Telecom T1', 3);
INSERT INTO teams (team_name, region_id)
VALUES ('EDward Gaming', 4);
INSERT INTO teams (team_name, region_id)
VALUES ('Royal Never Give Up', 4);
COMMIT;

INSERT INTO roles (role_name)
VALUES ('Top');
INSERT INTO roles (role_name)
VALUES ('Jungle');
INSERT INTO roles (role_name)
VALUES ('Mid');
INSERT INTO roles (role_name)
VALUES ('ADC');
INSERT INTO roles (role_name)
VALUES ('Support');
COMMIT;

INSERT INTO players (first_name, last_name, summoner_name, role_id, region_id, team_id)
VALUES ('Søren', 'Bjerg', 'Bjergsen', 3, 1, 1);
INSERT INTO players (first_name, last_name, summoner_name, role_id, region_id, team_id)
VALUES ('Mingyi', 'Shen', 'Spica', 2, 1, 1);
INSERT INTO players (first_name, last_name, summoner_name, role_id, region_id, team_id)
VALUES ('Heo', 'Seung-hoon', 'Huni', 1, 1, 1);
INSERT INTO players (first_name, last_name, summoner_name, role_id, region_id, team_id)
VALUES ('Yiliang', 'Peng', 'Doublelift', 4, 1, 1);
INSERT INTO players (first_name, last_name, summoner_name, role_id, region_id, team_id)
VALUES ('Vincent', 'Wang', 'Biofrost', 5, 1, 1);
COMMIT;

INSERT INTO players (first_name, last_name, summoner_name, role_id, region_id, team_id)
VALUES ('Gabriël', 'Rau', 'Bwipo', 1, 2, 2);
INSERT INTO players (first_name, last_name, summoner_name, role_id, region_id, team_id)
VALUES ('Oskar', 'Boderek', 'Selfmade', 2, 2, 2);
INSERT INTO players (first_name, last_name, summoner_name, role_id, region_id, team_id)
VALUES ('Tim', 'Lipovšek', 'Nemesis', 3, 2, 2);
INSERT INTO players (first_name, last_name, summoner_name, role_id, region_id, team_id)
VALUES ('Martin', 'Larsson', 'Rekkles', 4, 2, 2);
INSERT INTO players (first_name, last_name, summoner_name, role_id, region_id, team_id)
VALUES ('Zdravets', 'Galabov', 'Hylissang', 5, 2, 2);
COMMIT;

INSERT INTO players (first_name, last_name, summoner_name, role_id, region_id, team_id)
VALUES ('Kim', 'Dong-ha', 'Khan', 1, 3, 3);
INSERT INTO players (first_name, last_name, summoner_name, role_id, region_id, team_id)
VALUES ('Moon', 'Woo-chan', 'Cuzz', 2, 3, 3);
INSERT INTO players (first_name, last_name, summoner_name, role_id, region_id, team_id)
VALUES ('Lee', 'Sang-hyeok', 'Faker', 3, 3, 3);
INSERT INTO players (first_name, last_name, summoner_name, role_id, region_id, team_id)
VALUES ('Park', 'Jong-ik', 'Teddy', 4, 3, 3);
INSERT INTO players (first_name, last_name, summoner_name, role_id, region_id, team_id)
VALUES ('Lee', 'Jae-wan', 'Effort', 5, 3, 3);
COMMIT;

INSERT INTO players (first_name, last_name, summoner_name, role_id, region_id, team_id)
VALUES ('Li', 'Jian', 'Flandre', 1, 4, 4);
INSERT INTO players (first_name, last_name, summoner_name, role_id, region_id, team_id)
VALUES ('Ming', 'Kai', 'Clearlove', 2, 4, 4);
INSERT INTO players (first_name, last_name, summoner_name, role_id, region_id, team_id)
VALUES ('Lee', 'Yeon-jae', 'Scout', 3, 4, 4);
INSERT INTO players (first_name, last_name, summoner_name, role_id, region_id, team_id)
VALUES ('Hu', 'Xian-zhao', 'iBoy', 4, 4, 4);
INSERT INTO players (first_name, last_name, summoner_name, role_id, region_id, team_id)
VALUES ('Tian', 'Xin', 'Meiko', 5, 4, 4);
COMMIT;

INSERT INTO players (first_name, last_name, summoner_name, role_id, region_id, team_id)
VALUES ('Yan', 'Jun-ze', 'Letme', 1, 4, 5);
INSERT INTO players (first_name, last_name, summoner_name, role_id, region_id, team_id)
VALUES ('Hung', 'Hau-Hsuan', 'Karsa', 2, 4, 5);
INSERT INTO players (first_name, last_name, summoner_name, role_id, region_id, team_id)
VALUES ('Li', 'Yuan-Hao', 'Xiaohu', 3, 4, 5);
INSERT INTO players (first_name, last_name, summoner_name, role_id, region_id, team_id)
VALUES ('Jian', 'Zi-Hao', 'Uzi', 4, 4, 5);
INSERT INTO players (first_name, last_name, summoner_name, role_id, region_id, team_id)
VALUES ('Shi', 'Sen-Ming', 'Ming', 5, 4, 5);
COMMIT;

INSERT INTO tournaments (tournament_name, start_date, end_date, location)
VALUES ('Worlds 2022', TO_DATE('2022-09-29', 'YYYY-MM-DD'), TO_DATE('2022-11-06', 'YYYY-MM-DD'), 'Tokyo');
INSERT INTO tournaments (tournament_name, start_date, end_date, location)
VALUES ('Worlds 2021', TO_DATE('2021-09-29', 'YYYY-MM-DD'), TO_DATE('2021-11-06', 'YYYY-MM-DD'), 'Berlin');
INSERT INTO tournaments (tournament_name, start_date, end_date, location)
VALUES ('Worlds 2020', TO_DATE('2020-09-29', 'YYYY-MM-DD'), TO_DATE('2020-11-06', 'YYYY-MM-DD'), 'London');
INSERT INTO tournaments (tournament_name, start_date, end_date, location)
VALUES ('Mid-Season Invitational 2022', TO_DATE('2022-05-09', 'YYYY-MM-DD'), TO_DATE('2022-05-22', 'YYYY-MM-DD'),
        'Reykjavik');
INSERT INTO tournaments (tournament_name, start_date, end_date, location)
VALUES ('Mid-Season Invitational 2021', TO_DATE('2021-05-09', 'YYYY-MM-DD'), TO_DATE('2021-05-22', 'YYYY-MM-DD'),
        'Stockholm');
COMMIT;

INSERT INTO matches (tournament_id, team1_id, team2_id, match_date)
VALUES (1, 1, 2, TO_DATE('2022-10-07', 'YYYY-MM-DD'));
INSERT INTO matches (tournament_id, team1_id, team2_id, match_date)
VALUES (1, 1, 3, TO_DATE('2022-10-08', 'YYYY-MM-DD'));
INSERT INTO matches (tournament_id, team1_id, team2_id, match_date)
VALUES (1, 1, 4, TO_DATE('2022-10-08', 'YYYY-MM-DD'));
INSERT INTO matches (tournament_id, team1_id, team2_id, match_date)
VALUES (1, 1, 5, TO_DATE('2022-10-09', 'YYYY-MM-DD'));
INSERT INTO matches (tournament_id, team1_id, team2_id, match_date)
VALUES (1, 2, 3, TO_DATE('2022-10-10', 'YYYY-MM-DD'));
INSERT INTO matches (tournament_id, team1_id, team2_id, match_date)
VALUES (1, 2, 4, TO_DATE('2022-10-11', 'YYYY-MM-DD'));
INSERT INTO matches (tournament_id, team1_id, team2_id, match_date)
VALUES (1, 2, 5, TO_DATE('2022-10-12', 'YYYY-MM-DD'));
INSERT INTO matches (tournament_id, team1_id, team2_id, match_date)
VALUES (1, 3, 4, TO_DATE('2022-10-13', 'YYYY-MM-DD'));
INSERT INTO matches (tournament_id, team1_id, team2_id, match_date)
VALUES (1, 3, 5, TO_DATE('2022-10-14', 'YYYY-MM-DD'));
INSERT INTO matches (tournament_id, team1_id, team2_id, match_date)
VALUES (1, 4, 5, TO_DATE('2022-10-15', 'YYYY-MM-DD'));
COMMIT;

INSERT INTO match_results (match_id, winning_team_id)
VALUES (1, 1);
INSERT INTO match_results (match_id, winning_team_id)
VALUES (2, 1);
INSERT INTO match_results (match_id, winning_team_id)
VALUES (3, 1);
INSERT INTO match_results (match_id, winning_team_id)
VALUES (4, 1);
INSERT INTO match_results (match_id, winning_team_id)
VALUES (5, 2);
INSERT INTO match_results (match_id, winning_team_id)
VALUES (6, 2);
INSERT INTO match_results (match_id, winning_team_id)
VALUES (7, 2);
INSERT INTO match_results (match_id, winning_team_id)
VALUES (8, 3);
INSERT INTO match_results (match_id, winning_team_id)
VALUES (9, 3);
INSERT INTO match_results (match_id, winning_team_id)
VALUES (10, 4);
COMMIT;

INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (1, 1, 6, 1, 7, 310);
INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (2, 1, 4, 0, 10, 110);
INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (3, 1, 8, 2, 5, 350);
INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (4, 1, 5, 0, 7, 320);
INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (5, 1, 0, 1, 14, 45);
INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (6, 1, 1, 6, 0, 260);
INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (7, 1, 0, 4, 1, 90);
INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (8, 1, 2, 8, 1, 280);
INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (9, 1, 0, 5, 2, 300);
INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (10, 1, 1, 0, 3, 35);
COMMIT;

INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (1, 2, 4, 2, 6, 315);
INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (2, 2, 5, 1, 8, 130);
INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (3, 2, 7, 3, 4, 360);
INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (4, 2, 3, 1, 9, 290);
INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (5, 2, 0, 1, 12, 50);
INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (11, 2, 2, 4, 1, 270);
INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (12, 2, 1, 5, 2, 80);
INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (13, 2, 3, 7, 1, 285);
INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (14, 2, 1, 3, 3, 260);
INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (15, 2, 1, 0, 4, 45);
COMMIT;

INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (1, 3, 5, 2, 8, 320);
INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (2, 3, 3, 1, 11, 120);
INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (3, 3, 7, 3, 6, 340);
INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (4, 3, 4, 1, 8, 300);
INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (5, 3, 1, 2, 13, 40);
INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (16, 3, 2, 5, 1, 280);
INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (17, 3, 1, 3, 2, 80);
INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (18, 3, 3, 7, 0, 290);
INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (19, 3, 1, 4, 3, 270);
INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (20, 3, 0, 1, 4, 30);
COMMIT;

INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (1, 4, 5, 3, 9, 330);
INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (2, 4, 6, 1, 7, 110);
INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (3, 4, 8, 2, 6, 365);
INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (4, 4, 5, 1, 8, 305);
INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (5, 4, 0, 2, 15, 55);
INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (21, 4, 3, 5, 0, 275);
INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (22, 4, 1, 6, 1, 95);
INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (23, 4, 2, 8, 2, 295);
INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (24, 4, 1, 5, 3, 280);
INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (25, 4, 1, 0, 4, 60);
COMMIT;

INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (6, 5, 4, 2, 6, 310);
INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (7, 5, 3, 1, 9, 125);
INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (8, 5, 6, 3, 5, 350);
INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (9, 5, 3, 1, 7, 295);
INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (10, 5, 1, 2, 12, 45);
INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (11, 5, 2, 4, 1, 280);
INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (12, 5, 1, 3, 2, 90);
INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (13, 5, 3, 6, 1, 290);
INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (14, 5, 1, 3, 3, 270);
INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (15, 5, 0, 1, 4, 30);
COMMIT;

INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (6, 6, 5, 1, 7, 325);
INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (7, 6, 4, 0, 10, 130);
INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (8, 6, 7, 2, 5, 375);
INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (9, 6, 5, 1, 7, 320);
INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (10, 6, 0, 1, 14, 50);
INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (16, 6, 1, 5, 0, 290);
INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (17, 6, 0, 4, 1, 110);
INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (18, 6, 2, 7, 1, 300);
INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (19, 6, 1, 5, 2, 310);
INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (20, 6, 1, 0, 3, 40);
COMMIT;

INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (6, 7, 6, 2, 8, 335);
INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (7, 7, 5, 1, 11, 140);
INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (8, 7, 8, 3, 6, 390);
INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (9, 7, 4, 1, 8, 330);
INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (10, 7, 1, 2, 13, 55);
INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (21, 7, 2, 6, 1, 285);
INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (22, 7, 1, 5, 2, 100);
INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (23, 7, 3, 8, 1, 305);
INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (24, 7, 1, 4, 3, 300);
INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (25, 7, 0, 1, 4, 35);
COMMIT;

INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (11, 8, 5, 1, 7, 315);
INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (12, 8, 3, 0, 9, 135);
INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (13, 8, 6, 2, 5, 370);
INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (14, 8, 4, 1, 7, 295);
INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (15, 8, 1, 1, 12, 50);
INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (16, 8, 2, 5, 1, 290);
INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (17, 8, 1, 3, 2, 90);
INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (18, 8, 3, 6, 1, 295);
INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (19, 8, 1, 4, 3, 270);
INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (20, 8, 0, 1, 4, 30);
COMMIT;

INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (11, 9, 4, 2, 8, 325);
INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (12, 9, 5, 1, 10, 145);
INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (13, 9, 7, 3, 6, 380);
INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (14, 9, 3, 1, 9, 305);
INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (15, 9, 0, 1, 13, 60);
INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (21, 9, 2, 4, 1, 300);
INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (22, 9, 1, 5, 2, 110);
INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (23, 9, 3, 7, 1, 310);
INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (24, 9, 1, 3, 3, 290);
INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (25, 9, 0, 1, 4, 40);
COMMIT;

INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (16, 10, 2, 5, 1, 290);
INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (17, 10, 1, 3, 2, 90);
INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (18, 10, 3, 6, 1, 295);
INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (19, 10, 1, 4, 3, 270);
INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (20, 10, 0, 1, 4, 30);
INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (21, 10, 4, 1, 6, 315);
INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (22, 10, 3, 0, 9, 120);
INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (23, 10, 6, 2, 5, 350);
INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (24, 10, 3, 1, 7, 290);
INSERT INTO player_statistics (player_id, match_id, kills, deaths, assists, cs)
VALUES (25, 10, 1, 1, 12, 45);
COMMIT;

INSERT INTO champions (champion_name, role_id)
VALUES ('Gnar', 1);
INSERT INTO champions (champion_name, role_id)
VALUES ('Darius', 1);
INSERT INTO champions (champion_name, role_id)
VALUES ('Fiora', 1);
INSERT INTO champions (champion_name, role_id)
VALUES ('Maokai', 1);
INSERT INTO champions (champion_name, role_id)
VALUES ('Camille', 1);
INSERT INTO champions (champion_name, role_id)
VALUES ('Lee Sin', 2);
INSERT INTO champions (champion_name, role_id)
VALUES ('Elise', 2);
INSERT INTO champions (champion_name, role_id)
VALUES ('Vi', 2);
INSERT INTO champions (champion_name, role_id)
VALUES ('Sejuani', 2);
INSERT INTO champions (champion_name, role_id)
VALUES ('Jarvan IV', 2);
INSERT INTO champions (champion_name, role_id)
VALUES ('Ahri', 3);
INSERT INTO champions (champion_name, role_id)
VALUES ('Orianna', 3);
INSERT INTO champions (champion_name, role_id)
VALUES ('Zed', 3);
INSERT INTO champions (champion_name, role_id)
VALUES ('Syndra', 3);
INSERT INTO champions (champion_name, role_id)
VALUES ('Yasuo', 3);
INSERT INTO champions (champion_name, role_id)
VALUES ('Vayne', 4);
INSERT INTO champions (champion_name, role_id)
VALUES ('Ezreal', 4);
INSERT INTO champions (champion_name, role_id)
VALUES ('Caitlyn', 4);
INSERT INTO champions (champion_name, role_id)
VALUES ('Jhin', 4);
INSERT INTO champions (champion_name, role_id)
VALUES ('KaiSa', 4);
INSERT INTO champions (champion_name, role_id)
VALUES ('Thresh', 5);
INSERT INTO champions (champion_name, role_id)
VALUES ('Braum', 5);
INSERT INTO champions (champion_name, role_id)
VALUES ('Leona', 5);
INSERT INTO champions (champion_name, role_id)
VALUES ('Alistar', 5);
INSERT INTO champions (champion_name, role_id)
VALUES ('Janna', 5);
COMMIT;

INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (1, 1, 2);
INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (1, 2, 7);
INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (1, 3, 3);
INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (1, 4, 9);
INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (1, 5, 15);
INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (1, 6, 4);
INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (1, 7, 8);
INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (1, 8, 5);
INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (1, 9, 10);
INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (1, 10, 14);

INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (2, 1, 1);
INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (2, 2, 6);
INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (2, 3, 4);
INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (2, 4, 9);
INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (2, 5, 14);
INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (2, 11, 5);
INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (2, 12, 10);
INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (2, 13, 7);
INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (2, 14, 11);
INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (2, 15, 16);

INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (3, 1, 2);
INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (3, 2, 7);
INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (3, 3, 3);
INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (3, 4, 8);
INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (3, 5, 14);
INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (3, 16, 4);
INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (3, 17, 9);
INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (3, 18, 6);
INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (3, 19, 11);
INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (3, 20, 16);

INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (4, 1, 2);
INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (4, 2, 6);
INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (4, 3, 4);
INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (4, 4, 9);
INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (4, 5, 14);
INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (4, 21, 3);
INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (4, 22, 10);
INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (4, 23, 8);
INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (4, 24, 13);
INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (4, 25, 18);

INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (5, 6, 1);
INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (5, 7, 2);
INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (5, 8, 4);
INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (5, 9, 9);
INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (5, 10, 14);
INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (5, 11, 5);
INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (5, 12, 10);
INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (5, 13, 8);
INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (5, 14, 11);
INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (5, 15, 16);

INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (6, 6, 1);
INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (6, 7, 2);
INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (6, 8, 4);
INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (6, 9, 9);
INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (6, 10, 14);
INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (6, 16, 5);
INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (6, 17, 10);
INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (6, 18, 8);
INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (6, 19, 11);
INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (6, 20, 16);

INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (7, 6, 1);
INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (7, 7, 2);
INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (7, 8, 4);
INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (7, 9, 9);
INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (7, 10, 14);
INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (7, 21, 5);
INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (7, 22, 10);
INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (7, 23, 8);
INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (7, 24, 11);
INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (7, 25, 16);

INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (8, 11, 1);
INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (8, 12, 2);
INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (8, 13, 4);
INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (8, 14, 9);
INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (8, 15, 14);
INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (8, 16, 5);
INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (8, 17, 10);
INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (8, 18, 8);
INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (8, 19, 11);
INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (8, 20, 16);

INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (9, 11, 1);
INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (9, 12, 2);
INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (9, 13, 4);
INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (9, 14, 9);
INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (9, 15, 14);
INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (9, 21, 5);
INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (9, 22, 10);
INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (9, 23, 8);
INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (9, 24, 11);
INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (9, 25, 16);

INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (10, 16, 1);
INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (10, 17, 2);
INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (10, 18, 4);
INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (10, 19, 9);
INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (10, 20, 14);
INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (10, 21, 5);
INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (10, 22, 10);
INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (10, 23, 8);
INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (10, 24, 11);
INSERT INTO champion_picks (match_id, player_id, champion_id)
VALUES (10, 25, 16);
COMMIT;

INSERT INTO bans (match_id, champion_id)
VALUES (1, 1);
INSERT INTO bans (match_id, champion_id)
VALUES (1, 6);

INSERT INTO bans (match_id, champion_id)
VALUES (2, 3);
INSERT INTO bans (match_id, champion_id)
VALUES (2, 8);

INSERT INTO bans (match_id, champion_id)
VALUES (3, 5);
INSERT INTO bans (match_id, champion_id)
VALUES (3, 10);

INSERT INTO bans (match_id, champion_id)
VALUES (4, 7);
INSERT INTO bans (match_id, champion_id)
VALUES (4, 12);

INSERT INTO bans (match_id, champion_id)
VALUES (5, 9);
INSERT INTO bans (match_id, champion_id)
VALUES (5, 14);

INSERT INTO bans (match_id, champion_id)
VALUES (6, 11);
INSERT INTO bans (match_id, champion_id)
VALUES (6, 16);

INSERT INTO bans (match_id, champion_id)
VALUES (7, 13);
INSERT INTO bans (match_id, champion_id)
VALUES (7, 18);

INSERT INTO bans (match_id, champion_id)
VALUES (8, 15);
INSERT INTO bans (match_id, champion_id)
VALUES (8, 20);

INSERT INTO bans (match_id, champion_id)
VALUES (9, 17);
INSERT INTO bans (match_id, champion_id)
VALUES (9, 22);

INSERT INTO bans (match_id, champion_id)
VALUES (10, 19);
INSERT INTO bans (match_id, champion_id)
VALUES (10, 24);
COMMIT;

CREATE OR REPLACE PROCEDURE ex6(p_tournament_name IN tournaments.tournament_name%TYPE) AS
    TYPE t_role_kills IS TABLE OF NUMBER INDEX BY PLS_INTEGER;
    TYPE t_role_players IS TABLE OF NUMBER INDEX BY PLS_INTEGER;
    TYPE t_result IS TABLE OF VARCHAR2(100);
    v_result        t_result := t_result();
    v_role_kills    t_role_kills;
    v_role_players  t_role_players;
    v_max_kills     NUMBER;
    v_player_id     players.id%TYPE;
    v_role_id       roles.id%TYPE;
    v_tournament_id tournaments.id%TYPE;
BEGIN
    SELECT id INTO v_tournament_id FROM tournaments WHERE tournament_name = p_tournament_name;

    FOR r IN (SELECT id FROM roles)
        LOOP
            v_role_id := r.id;
            SELECT ps.player_id, MAX(ps.kills)
            INTO v_player_id, v_max_kills
            FROM player_statistics ps
                     JOIN matches m ON m.id = ps.match_id
                     JOIN players p ON p.id = ps.player_id
            WHERE m.tournament_id = v_tournament_id
              AND p.role_id = v_role_id
            GROUP BY ps.player_id
            ORDER BY MAX(ps.kills) DESC
                FETCH FIRST ROW ONLY;

            IF v_role_kills.EXISTS(v_role_id) THEN
                IF v_max_kills > v_role_kills(v_role_id) THEN
                    v_role_kills(v_role_id) := v_max_kills;
                    v_role_players(v_role_id) := v_player_id;
                END IF;
            ELSE
                v_role_kills(v_role_id) := v_max_kills;
                v_role_players(v_role_id) := v_player_id;
            END IF;
        END LOOP;

    v_role_id := v_role_kills.first;
    WHILE v_role_id IS NOT NULL
        LOOP
            v_result.extend;
            v_result(v_result.count) := 'Player with id ' || v_role_players(v_role_id) || ' in role ' || v_role_id ||
                                        ' had the maximum kills: ' || v_role_kills(v_role_id);
            v_role_id := v_role_kills.next(v_role_id);
        END LOOP;

    FOR i IN 1 .. v_result.count
        LOOP
            dbms_output.put_line(v_result(i));
        END LOOP;
END ex6;
/

CREATE OR REPLACE PROCEDURE ex7(p_tournament_name IN tournaments.tournament_name%TYPE)
    IS
    CURSOR c_teams
        IS
        SELECT id, team_name
        FROM teams;
    TYPE ref_cur_type IS REF CURSOR;
    v_team_wins     ref_cur_type;
    v_team_id       teams.id%TYPE;
    v_team_name     teams.team_name%TYPE;
    v_wins          NUMBER;
    v_tournament_id tournaments.id%TYPE;
BEGIN
    SELECT id INTO v_tournament_id FROM tournaments WHERE tournament_name = p_tournament_name;

    OPEN c_teams;
    LOOP
        FETCH c_teams INTO v_team_id, v_team_name;
        EXIT WHEN c_teams%NOTFOUND;

        OPEN v_team_wins FOR
            SELECT COUNT(*) AS wins
            FROM match_results mr
                     JOIN matches m ON m.id = mr.match_id
            WHERE m.tournament_id = v_tournament_id
              AND mr.winning_team_id = v_team_id;

        FETCH v_team_wins INTO v_wins;
        CLOSE v_team_wins;

        dbms_output.put_line('Team: ' || v_team_name || ' - Wins: ' || v_wins);
    END LOOP;
    CLOSE c_teams;
END ex7;
/

CREATE OR REPLACE TYPE players_table IS TABLE OF VARCHAR2(100);

CREATE OR REPLACE FUNCTION ex8(p_tournament_name IN tournaments.tournament_name%TYPE)
    RETURN players_table IS
    v_kda_avg           NUMBER;
    v_player_name       VARCHAR2(100);
    v_player_kda        NUMBER;
    v_tournament_exists NUMBER;
    e_tournament_not_found EXCEPTION;
    e_no_statistics_found EXCEPTION;
    e_multiple_tournaments_found EXCEPTION;
    v_players_above_avg players_table := players_table();
    CURSOR c_kda_cursor IS
        SELECT p.summoner_name,
               (SUM(ps.kills) + SUM(ps.assists)) / (NULLIF(SUM(ps.deaths), 0)) AS player_kda
        FROM players p
                 JOIN player_statistics ps ON ps.player_id = p.id
                 JOIN matches m ON m.id = ps.match_id
                 JOIN tournaments t ON t.id = m.tournament_id
        WHERE t.tournament_name = p_tournament_name
        GROUP BY p.summoner_name;
BEGIN
    SELECT COUNT(*)
    INTO v_tournament_exists
    FROM tournaments
    WHERE tournament_name = p_tournament_name;

    IF v_tournament_exists = 0 THEN
        RAISE e_tournament_not_found;
    ELSIF v_tournament_exists > 1 THEN
        RAISE e_multiple_tournaments_found;
    END IF;

    SELECT AVG((ps.kills + ps.assists) / NULLIF(ps.deaths, 0))
    INTO v_kda_avg
    FROM players p
             JOIN player_statistics ps ON ps.player_id = p.id
             JOIN matches m ON m.id = ps.match_id
             JOIN tournaments t ON t.id = m.tournament_id
    WHERE t.tournament_name = p_tournament_name;

    IF v_kda_avg IS NULL THEN
        RAISE e_no_statistics_found;
    END IF;

    OPEN c_kda_cursor;
    LOOP
        FETCH c_kda_cursor INTO v_player_name, v_player_kda;
        EXIT WHEN c_kda_cursor%NOTFOUND;
        IF v_player_kda > v_kda_avg THEN
            v_players_above_avg.extend;
            v_players_above_avg(v_players_above_avg.count) := v_player_name;
        END IF;
    END LOOP;
    CLOSE c_kda_cursor;

    RETURN v_players_above_avg;

EXCEPTION
    WHEN e_no_statistics_found THEN
        RAISE_APPLICATION_ERROR(-20001, 'No statistics found for tournament ' || p_tournament_name || '.');
        RETURN NULL;
    WHEN e_multiple_tournaments_found THEN
        RAISE_APPLICATION_ERROR(-20002,
                                'Multiple tournaments found with name ' || p_tournament_name || '.');
        RETURN NULL;
    WHEN e_tournament_not_found THEN
        RAISE_APPLICATION_ERROR(-20003, 'Tournament with name ' || p_tournament_name || ' does not exist.');
        RETURN NULL;
END ex8;
/

CREATE OR REPLACE PROCEDURE ex9(p_tournament_name IN tournaments.tournament_name%TYPE)
    IS
    TYPE r_cs_champions_type IS RECORD
                                (
                                    champion_name champions.champion_name%TYPE,
                                    average_cs    NUMBER
                                );
    TYPE t_cs_champions_table IS TABLE OF r_cs_champions_type;
    v_cs_champions      t_cs_champions_table;
    v_tournament_exists NUMBER;
    CURSOR c_top5_avg IS
        SELECT c.champion_name, AVG(ps.cs) AS average_cs
        FROM champions c
                 JOIN champion_picks cp ON c.id = cp.champion_id
                 JOIN player_statistics ps ON cp.player_id = ps.player_id AND cp.match_id = ps.match_id
                 JOIN matches m ON cp.match_id = m.id
                 JOIN tournaments t ON m.tournament_id = t.id
        WHERE t.tournament_name = p_tournament_name
        GROUP BY c.champion_name
        HAVING AVG(ps.cs) > 250
        ORDER BY AVG(ps.cs) DESC;
BEGIN
    SELECT id INTO v_tournament_exists FROM tournaments WHERE tournament_name = p_tournament_name;

    OPEN c_top5_avg;
    FETCH c_top5_avg BULK COLLECT INTO v_cs_champions;
    CLOSE c_top5_avg;

    FOR i IN 1..LEAST(v_cs_champions.count, 5)
        LOOP
            dbms_output.put_line('Champion ' || v_cs_champions(i).champion_name || ' has an average CS of ' ||
                                 ROUND(v_cs_champions(i).average_cs, 0));
        END LOOP;
EXCEPTION
    WHEN no_data_found THEN
        RAISE_APPLICATION_ERROR(-20001, 'Tournament with name ' || p_tournament_name || ' does not exist.');
    WHEN too_many_rows THEN
        RAISE_APPLICATION_ERROR(-20002, 'Multiple tournaments with name ' || p_tournament_name || ' exist.');
END ex9;
/

CREATE OR REPLACE TRIGGER trigger_ex10
    BEFORE UPDATE OR DELETE
    ON regions
BEGIN
    IF UPDATING THEN
        RAISE_APPLICATION_ERROR(-20001, 'Regions cannot be updated');
    ELSIF DELETING THEN
        RAISE_APPLICATION_ERROR(-20002, 'Regions cannot be deleted');
    END IF;
END;
/

CREATE OR REPLACE TRIGGER trigger_ex11
    BEFORE INSERT OR UPDATE
    ON match_results
    FOR EACH ROW
DECLARE
    v_team1_id teams.id%TYPE;
    v_team2_id teams.id%TYPE;
BEGIN
    SELECT team1_id, team2_id INTO v_team1_id, v_team2_id FROM matches WHERE id = :new.match_id;

    IF (:new.winning_team_id <> v_team1_id AND :new.winning_team_id <> v_team2_id) THEN
        RAISE_APPLICATION_ERROR(-20001, 'Team ' || :new.winning_team_id || ' is not in match ' || :new.match_id);
    END IF;
END;
/

CREATE OR REPLACE TRIGGER trigger_ex12
    BEFORE CREATE OR DROP OR ALTER
    ON SCHEMA
BEGIN
    IF (sys.login_user() <> 'ADMIN') THEN
        RAISE_APPLICATION_ERROR(-20001, 'Only ADMIN user can create, drop or alter tables');
    END IF;
END;
/

CREATE OR REPLACE PACKAGE package_ex13 AS

    TYPE players_table_package IS TABLE OF VARCHAR2(100);
    PROCEDURE ex6(p_tournament_name IN tournaments.tournament_name%TYPE);
    PROCEDURE ex7(p_tournament_name IN tournaments.tournament_name%TYPE);
    FUNCTION ex8(p_tournament_name IN tournaments.tournament_name%TYPE) RETURN players_table_package;
    PROCEDURE ex9(p_tournament_name IN tournaments.tournament_name%TYPE);

END package_ex13;
/

CREATE OR REPLACE PACKAGE BODY package_ex13 AS
    -- Pentru un turneu dat, pentru fiecare rol, sa se afiseze id-ul jucatorului ce joaca acel rol
    -- si are numarul maxim de kill-uri facute de acesta intr-un singur meci. Afisati si numarul de killuri.
    PROCEDURE ex6(p_tournament_name IN tournaments.tournament_name%TYPE) AS
        TYPE t_role_kills IS TABLE OF NUMBER INDEX BY PLS_INTEGER;
        TYPE t_role_players IS TABLE OF NUMBER INDEX BY PLS_INTEGER;
        TYPE t_result IS TABLE OF VARCHAR2(100);
        v_result        t_result := t_result();
        v_role_kills    t_role_kills;
        v_role_players  t_role_players;
        v_max_kills     NUMBER;
        v_player_id     players.id%TYPE;
        v_role_id       roles.id%TYPE;
        v_tournament_id tournaments.id%TYPE;
    BEGIN
        SELECT id INTO v_tournament_id FROM tournaments WHERE tournament_name = p_tournament_name;

        FOR r IN (SELECT id FROM roles)
            LOOP
                v_role_id := r.id;
                SELECT ps.player_id, MAX(ps.kills)
                INTO v_player_id, v_max_kills
                FROM player_statistics ps
                         JOIN matches m ON m.id = ps.match_id
                         JOIN players p ON p.id = ps.player_id
                WHERE m.tournament_id = v_tournament_id
                  AND p.role_id = v_role_id
                GROUP BY ps.player_id
                ORDER BY MAX(ps.kills) DESC
                    FETCH FIRST ROW ONLY;

                IF v_role_kills.EXISTS(v_role_id) THEN
                    IF v_max_kills > v_role_kills(v_role_id) THEN
                        v_role_kills(v_role_id) := v_max_kills;
                        v_role_players(v_role_id) := v_player_id;
                    END IF;
                ELSE
                    v_role_kills(v_role_id) := v_max_kills;
                    v_role_players(v_role_id) := v_player_id;
                END IF;
            END LOOP;

        v_role_id := v_role_kills.first;
        WHILE v_role_id IS NOT NULL
            LOOP
                v_result.extend;
                v_result(v_result.count) :=
                            'Player with id ' || v_role_players(v_role_id) || ' in role ' || v_role_id ||
                            ' had the maximum kills: ' || v_role_kills(v_role_id);
                v_role_id := v_role_kills.next(v_role_id);
            END LOOP;

        FOR i IN 1 .. v_result.count
            LOOP
                dbms_output.put_line(v_result(i));
            END LOOP;
    END ex6;

    -- Afișați numele echipelor și numărul de meciuri câștigate de acestea intr-un turneu dat.
    PROCEDURE ex7(p_tournament_name IN tournaments.tournament_name%TYPE)
        IS
        CURSOR c_teams
            IS
            SELECT id, team_name
            FROM teams;
        TYPE ref_cur_type IS REF CURSOR;
        v_team_wins     ref_cur_type;
        v_team_id       teams.id%TYPE;
        v_team_name     teams.team_name%TYPE;
        v_wins          NUMBER;
        v_tournament_id tournaments.id%TYPE;
    BEGIN
        SELECT id INTO v_tournament_id FROM tournaments WHERE tournament_name = p_tournament_name;

        OPEN c_teams;
        LOOP
            FETCH c_teams INTO v_team_id, v_team_name;
            EXIT WHEN c_teams%NOTFOUND;

            OPEN v_team_wins FOR
                SELECT COUNT(*) AS wins
                FROM match_results mr
                         JOIN matches m ON m.id = mr.match_id
                WHERE m.tournament_id = v_tournament_id
                  AND mr.winning_team_id = v_team_id;

            FETCH v_team_wins INTO v_wins;
            CLOSE v_team_wins;

            dbms_output.put_line('Team: ' || v_team_name || ' - Wins: ' || v_wins);
        END LOOP;
        CLOSE c_teams;
    END ex7;

    -- Afisati numele jucatorilor care au un KDA mai mare decat media KDA-urilor tuturor jucatorilor dintr-un turneu dat.
    -- KDA = (kills + assists) / deaths, in cazul in care deaths = 0, KDA = kills + assists
    FUNCTION ex8(p_tournament_name IN tournaments.tournament_name%TYPE)
        RETURN players_table_package IS
        v_kda_avg           NUMBER;
        v_player_name       VARCHAR2(100);
        v_player_kda        NUMBER;
        v_tournament_exists NUMBER;
        e_tournament_not_found EXCEPTION;
        e_no_statistics_found EXCEPTION;
        e_multiple_tournaments_found EXCEPTION;
        v_players_above_avg players_table_package := players_table_package();
        CURSOR c_kda_cursor IS
            SELECT p.summoner_name,
                   (SUM(ps.kills) + SUM(ps.assists)) / (NULLIF(SUM(ps.deaths), 0)) AS player_kda
            FROM players p
                     JOIN player_statistics ps ON ps.player_id = p.id
                     JOIN matches m ON m.id = ps.match_id
                     JOIN tournaments t ON t.id = m.tournament_id
            WHERE t.tournament_name = p_tournament_name
            GROUP BY p.summoner_name;
    BEGIN
        SELECT COUNT(*)
        INTO v_tournament_exists
        FROM tournaments
        WHERE tournament_name = p_tournament_name;

        IF v_tournament_exists = 0 THEN
            RAISE e_tournament_not_found;
        ELSIF v_tournament_exists > 1 THEN
            RAISE e_multiple_tournaments_found;
        END IF;

        SELECT AVG((ps.kills + ps.assists) / NULLIF(ps.deaths, 0))
        INTO v_kda_avg
        FROM players p
                 JOIN player_statistics ps ON ps.player_id = p.id
                 JOIN matches m ON m.id = ps.match_id
                 JOIN tournaments t ON t.id = m.tournament_id
        WHERE t.tournament_name = p_tournament_name;

        IF v_kda_avg IS NULL THEN
            RAISE e_no_statistics_found;
        END IF;

        OPEN c_kda_cursor;
        LOOP
            FETCH c_kda_cursor INTO v_player_name, v_player_kda;
            EXIT WHEN c_kda_cursor%NOTFOUND;
            IF v_player_kda > v_kda_avg THEN
                v_players_above_avg.extend;
                v_players_above_avg(v_players_above_avg.count) := v_player_name;
            END IF;
        END LOOP;
        CLOSE c_kda_cursor;

        RETURN v_players_above_avg;

    EXCEPTION
        WHEN e_no_statistics_found THEN
            RAISE_APPLICATION_ERROR(-20001, 'No statistics found for tournament ' || p_tournament_name || '.');
            RETURN NULL;
        WHEN e_multiple_tournaments_found THEN
            RAISE_APPLICATION_ERROR(-20002,
                                    'Multiple tournaments found with name ' || p_tournament_name || '.');
            RETURN NULL;
        WHEN e_tournament_not_found THEN
            RAISE_APPLICATION_ERROR(-20003, 'Tournament with name ' || p_tournament_name || ' does not exist.');
            RETURN NULL;
    END ex8;

    -- Afisati numele campionilor si media de cs ce sunt in top 5 in functie de media de cs pe meci
    -- pentru un anumit turneu.
    PROCEDURE ex9(p_tournament_name IN tournaments.tournament_name%TYPE)
        IS
        TYPE r_cs_champions_type IS RECORD
                                    (
                                        champion_name champions.champion_name%TYPE,
                                        average_cs    NUMBER
                                    );
        TYPE t_cs_champions_table IS TABLE OF r_cs_champions_type;
        v_cs_champions      t_cs_champions_table;
        v_tournament_exists NUMBER;
        CURSOR c_top5_avg IS
            SELECT c.champion_name, AVG(ps.cs) AS average_cs
            FROM champions c
                     JOIN champion_picks cp ON c.id = cp.champion_id
                     JOIN player_statistics ps ON cp.player_id = ps.player_id AND cp.match_id = ps.match_id
                     JOIN matches m ON cp.match_id = m.id
                     JOIN tournaments t ON m.tournament_id = t.id
            WHERE t.tournament_name = p_tournament_name
            GROUP BY c.champion_name
            HAVING AVG(ps.cs) > 250
            ORDER BY AVG(ps.cs) DESC;
    BEGIN
        SELECT id INTO v_tournament_exists FROM tournaments WHERE tournament_name = p_tournament_name;

        OPEN c_top5_avg;
        FETCH c_top5_avg BULK COLLECT INTO v_cs_champions;
        CLOSE c_top5_avg;

        FOR i IN 1..LEAST(v_cs_champions.count, 5)
            LOOP
                dbms_output.put_line('Champion ' || v_cs_champions(i).champion_name || ' has an average CS of ' ||
                                     ROUND(v_cs_champions(i).average_cs, 0));
            END LOOP;
    EXCEPTION
        WHEN no_data_found THEN
            RAISE_APPLICATION_ERROR(-20001, 'Tournament with name ' || p_tournament_name || ' does not exist.');
        WHEN too_many_rows THEN
            RAISE_APPLICATION_ERROR(-20002, 'Multiple tournaments with name ' || p_tournament_name || ' exist.');
    END ex9;

END package_ex13;
/

CREATE OR REPLACE PACKAGE package_ex14 AS

    TYPE t_champion IS RECORD
                       (
                           id            champions.id%TYPE,
                           champion_name champions.champion_name%TYPE,
                           role_id       champions.role_id%TYPE,
                           bans_count    NUMBER,
                           bans_score    NUMBER,
                           performance   NUMBER
                       );

    PROCEDURE parse_champion(p_champion_id IN NUMBER, p_tournament_id IN NUMBER, t_champion OUT t_champion);

    PROCEDURE calculate_champion_performance(p_champion IN OUT t_champion);

    FUNCTION calculate_meta_score(p_champion IN t_champion) RETURN NUMBER;

    FUNCTION get_meta_champion(p_tournament_id IN NUMBER) RETURN t_champion;

END package_ex14;
/

CREATE OR REPLACE PACKAGE BODY package_ex14 AS

    PROCEDURE parse_champion(p_champion_id IN NUMBER, p_tournament_id IN NUMBER, t_champion OUT t_champion) IS
        v_total_bans NUMBER;
        v_bans_count NUMBER;
    BEGIN
        SELECT COUNT(*)
        INTO v_total_bans
        FROM bans b
                 INNER JOIN matches m ON b.match_id = m.id
        WHERE m.tournament_id = p_tournament_id;

        SELECT COUNT(*)
        INTO v_bans_count
        FROM bans b
                 INNER JOIN matches m ON b.match_id = m.id
        WHERE m.tournament_id = p_tournament_id
          AND champion_id = p_champion_id;
        t_champion.id := p_champion_id;

        SELECT champion_name, role_id
        INTO t_champion.champion_name, t_champion.role_id
        FROM champions
        WHERE id = p_champion_id;

        t_champion.bans_score := (v_bans_count * 100) / v_total_bans;
        calculate_champion_performance(t_champion);
    END parse_champion;

    PROCEDURE calculate_champion_performance(p_champion IN OUT t_champion) IS
    BEGIN
        SELECT ROUND(AVG((ps.kills + ps.assists) / NULLIF(ps.deaths, 0)), 3)
        INTO p_champion.performance
        FROM player_statistics ps
                 INNER JOIN champion_picks cp ON ps.match_id = cp.match_id AND ps.player_id = cp.player_id
        WHERE cp.champion_id = p_champion.id;
    END calculate_champion_performance;

    FUNCTION calculate_meta_score(p_champion IN t_champion) RETURN NUMBER IS
    BEGIN
        RETURN p_champion.bans_score * 10 + p_champion.performance * 5;
    END calculate_meta_score;

    FUNCTION get_meta_champion(p_tournament_id IN NUMBER) RETURN t_champion IS
        v_best_champion    t_champion;
        v_current_champion t_champion;
        v_best_score       NUMBER := 0;
        v_current_score    NUMBER;
        e_no_champion_data_found EXCEPTION;
        CURSOR c_champions_with_data IS
            SELECT id
            FROM champions
            WHERE 0 < (SELECT COUNT(*)
                       FROM champion_picks
                       WHERE champion_id = champions.id
                         AND match_id IN (SELECT id FROM matches WHERE tournament_id = p_tournament_id))
               OR 0 < (SELECT COUNT(*)
                       FROM bans
                       WHERE champion_id = champions.id
                         AND match_id IN (SELECT id FROM matches WHERE tournament_id = p_tournament_id));
    BEGIN
        FOR r IN c_champions_with_data
            LOOP
                parse_champion(r.id, p_tournament_id, v_current_champion);
                v_current_score := calculate_meta_score(v_current_champion);
                IF v_current_score > v_best_score THEN
                    v_best_score := v_current_score;
                    v_best_champion := v_current_champion;
                END IF;
            END LOOP;
        IF v_best_champion.id is NULL THEN
            RAISE e_no_champion_data_found;
        END IF;
        RETURN v_best_champion;
    EXCEPTION
        WHEN e_no_champion_data_found THEN
            RAISE_APPLICATION_ERROR(-20001, 'No champion data found for tournament with id ' || p_tournament_id);
    END get_meta_champion;

END package_ex14;
/
