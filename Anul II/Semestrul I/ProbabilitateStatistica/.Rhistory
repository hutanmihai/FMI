# Run the Shiny app
shinyApp(ui, server)
library(shiny)
library(shiny); runApp('Desktop/ProbabilitateStatistica/Proiect.R')
runApp('Desktop/ProbabilitateStatistica/Proiect.R')
runApp('Desktop/ProbabilitateStatistica/Proiect.R')
runApp('Desktop/ProbabilitateStatistica/Proiect.R')
runApp('Desktop/ProbabilitateStatistica/Proiect.R')
runApp('Desktop/ProbabilitateStatistica/Proiect.R')
# Function to generate the chaos game fractal
generate_fractal <- function(vertices, point, probability, iterations) {
# Initialize an empty list to store the points
points <- list()
# Iterate for the specified number of iterations
for (i in 1:iterations) {
# Generate a new point and append it to the list
point <- generate_point(vertices, point, probability)
points[[i]] <- point
}
# Return the list of points
return(points)
}
library(shiny)
# Function to generate a point in the chaos game
generate_point <- function(vertices, point, probability) {
# Choose a vertex at random
vertex <- sample(vertices, 1)
# Compute the midpoint between the current point and the chosen vertex
midpoint <- (point + vertex) / 2
# Return the midpoint with probability p, and the vertex with probability (1 - p)
if (runif(1) < probability) {
return(midpoint)
} else {
return(vertex)
}
}
# Function to generate the chaos game fractal
generate_fractal <- function(vertices, point, probability, iterations) {
# Initialize an empty list to store the points
points <- list()
# Iterate for the specified number of iterations
for (i in 1:iterations) {
# Generate a new point and append it to the list
point <- generate_point(vertices, point, probability)
points[[i]] <- point
}
# Return the list of points
return(points)
}
# Define the Shiny app
ui <- fluidPage(
# Add a dropdown menu to select the polygon
selectInput("polygon", "Polygon:",
c("Triangle" = "triangle", "Pentagon" = "pentagon", "Hexagon" = "hexagon")),
# Add a slider to select the number of iterations
sliderInput("iterations", "Iterations:",
min = 100, max = 10000, value = 1000, step = 100),
# Add a plot to the app
plotOutput("plot")
)
server <- function(input, output) {
# Render the plot
output$plot <- renderPlot({
# Set up the vertices of the polygon
if (input$polygon == "triangle") {
vertices <- matrix(c(0, 0, 1, 0, 0.5, sqrt(3)/2), nrow = 3, byrow = TRUE)
} else if (input$polygon == "pentagon") {
vertices <- matrix(c(0, 0, 1, 0, 0.5 + 0.5*cos(pi/5), 0.5*sin(pi/5),
0.5 + 0.5*cos(pi/5), 0.5*sin(pi/5), 0.5, 1), nrow = 5, byrow = TRUE)
} else if (input$polygon == "hexagon") {
vertices <- matrix(c(0, 0, 0.5, 0, 1, 0, 1.5*cos(pi/3), 0.5*sin(pi/3),
1, 1, 0.5, 1, 0, 1, -0.5*cos(pi/3), 0.5*sin(pi/3)), nrow = 6, byrow = TRUE)
}
# Initialize the point to the origin
point <- c(0, 0)
# Set up an empty plot
plot(0, 0, xlim = c(-0.1, 1.1), ylim = c(-0.1, sqrt(3)/2 + 0.1), type = "n",
main = "Chaos Game Fractal", xlab = "", ylab = "")
# Add the vertices to the plot
points(vertices, pch = 19, col = "red")
# Animate the points as they are generated
for (i in 1:input$iterations) {
# Generate a new point
point <- generate_point(vertices, point, 0.5)
# Add the point to the plot
points(point, pch = 19, col = "blue")
# Pause for a short time to allow the point to be displayed
Sys.sleep(0.001)
# Redraw the plot to update the display
plot.window()
}
source("~/Desktop/ProbabilitateStatistica/Proiect.R")
source("~/Desktop/ProbabilitateStatistica/Proiect.R")
source("~/Desktop/ProbabilitateStatistica/Proiect.R")
source("~/Desktop/ProbabilitateStatistica/Proiect.R")
source("~/Desktop/ProbabilitateStatistica/Proiect.R")
source("~/Desktop/ProbabilitateStatistica/Proiect.R")
source("~/Desktop/ProbabilitateStatistica/Proiect.R")
source("~/Desktop/ProbabilitateStatistica/Proiect.R")
runApp('Desktop/ProbabilitateStatistica/Proiect.R')
runApp('Desktop/ProbabilitateStatistica/Proiect.R')
source("~/Desktop/ProbabilitateStatistica/Proiect.R")
source("~/Desktop/ProbabilitateStatistica/Proiect.R")
source("~/Desktop/ProbabilitateStatistica/Proiect.R")
runApp('Desktop/ProbabilitateStatistica/Proiect.R')
runApp('Desktop/ProbabilitateStatistica/Proiect.R')
source("~/Desktop/ProbabilitateStatistica/Proiect.R")
runApp('Desktop/ProbabilitateStatistica/Proiect.R')
source("~/Desktop/ProbabilitateStatistica/Proiect.R")
source("~/Desktop/ProbabilitateStatistica/Proiect.R")
source("~/Desktop/ProbabilitateStatistica/Proiect.R")
source("~/Desktop/ProbabilitateStatistica/Proiect.R")
source("~/Desktop/ProbabilitateStatistica/Proiect.R")
source("~/Desktop/ProbabilitateStatistica/Proiect.R")
source("~/Desktop/ProbabilitateStatistica/Proiect.R")
source("~/Desktop/ProbabilitateStatistica/Proiect.R")
source("~/Desktop/ProbabilitateStatistica/Proiect.R")
runApp('Desktop/ProbabilitateStatistica/Proiect.R')
source("~/Desktop/ProbabilitateStatistica/Proiect.R")
source("~/Desktop/ProbabilitateStatistica/Proiect.R")
source("~/Desktop/ProbabilitateStatistica/Proiect.R")
source("~/Desktop/ProbabilitateStatistica/Proiect.R")
source("~/Desktop/ProbabilitateStatistica/Proiect.R")
source("~/Desktop/ProbabilitateStatistica/Proiect.R")
source("~/Desktop/ProbabilitateStatistica/Proiect.R")
source("~/Desktop/ProbabilitateStatistica/Proiect.R")
source("~/Desktop/ProbabilitateStatistica/Proiect.R")
runApp('Desktop/ProbabilitateStatistica/Proiect.R')
source("~/Desktop/ProbabilitateStatistica/Proiect.R")
source("~/Desktop/ProbabilitateStatistica/Proiect.R")
source("~/Desktop/ProbabilitateStatistica/Proiect.R")
source("~/Desktop/ProbabilitateStatistica/Proiect.R")
source("~/Desktop/ProbabilitateStatistica/Proiect.R")
source("~/Desktop/ProbabilitateStatistica/Proiect.R")
source("~/Desktop/ProbabilitateStatistica/Proiect.R")
runApp('Desktop/ProbabilitateStatistica/Proiect.R')
source("~/Desktop/ProbabilitateStatistica/Proiect.R")
source("~/Desktop/ProbabilitateStatistica/Proiect.R")
source("~/Desktop/ProbabilitateStatistica/Proiect.R")
runApp('Desktop/ProbabilitateStatistica/Proiect.R')
source("~/Desktop/ProbabilitateStatistica/Proiect.R")
source("~/Desktop/ProbabilitateStatistica/Proiect.R")
source("~/Desktop/ProbabilitateStatistica/Proiect.R")
source("~/Desktop/ProbabilitateStatistica/Proiect.R")
source("~/Desktop/ProbabilitateStatistica/Proiect.R")
runApp('Desktop/ProbabilitateStatistica/Proiect.R')
runApp('Desktop/ProbabilitateStatistica/Proiect.R')
source("~/Desktop/ProbabilitateStatistica/Proiect.R")
runApp('Desktop/ProbabilitateStatistica/Proiect.R')
source("~/Desktop/ProbabilitateStatistica/Proiect.R")
runApp('Desktop/ProbabilitateStatistica/Proiect.R')
source("~/Desktop/ProbabilitateStatistica/Proiect.R")
source("~/Desktop/ProbabilitateStatistica/Proiect.R")
runApp('Desktop/ProbabilitateStatistica/Proiect.R')
source("~/Desktop/ProbabilitateStatistica/Proiect.R")
source("~/Desktop/ProbabilitateStatistica/Proiect.R")
runApp('Desktop/ProbabilitateStatistica/Proiect.R')
runApp('Desktop/ProbabilitateStatistica/Proiect.R')
source("~/Desktop/ProbabilitateStatistica/Proiect.R")
source("~/Desktop/ProbabilitateStatistica/Proiect.R")
runApp('Desktop/ProbabilitateStatistica/Proiect.R')
source("~/Desktop/ProbabilitateStatistica/Proiect.R")
source("~/Desktop/ProbabilitateStatistica/Proiect.R")
source("~/Desktop/ProbabilitateStatistica/Proiect.R")
source("~/Desktop/ProbabilitateStatistica/Proiect.R")
runApp('Desktop/ProbabilitateStatistica/Proiect.R')
