name: FRONTEND

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  PROJECT_ID: "vision-canvas-2023"
  REGION: "europe-west1"
  AR_NAME: "frontend"

jobs:
  build_pr:
    permissions:
      contents: "read"
      id-token: "write"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - id: auth
        name: Authenticate with GCP
        uses: google-github-actions/auth@v1
        with:
          project_id: ${{ env.PROJECT_ID }}
          service_account: ${{ secrets.SA_EMAIL }}
          workload_identity_provider: ${{ secrets.WIF_PROVIDER }}
          token_format: "access_token"
      - name: Login to Artifact Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGION }}-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}
      - name: Publish to GCP Artifact Registry
        uses: docker/build-push-action@v2
        with:
          context: vision-canvas-web
          push: true
          tags: ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.AR_NAME }}/${{ env.PROJECT_ID }}-${{ env.AR_NAME }}:${{ github.sha }}
    if: ${{ github.event_name == 'pull_request' }}
  build_main:
    permissions:
      contents: "read"
      id-token: "write"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - id: auth
        name: Authenticate with GCP
        uses: google-github-actions/auth@v1
        with:
          project_id: ${{ env.PROJECT_ID }}
          service_account: ${{ secrets.SA_EMAIL }}
          workload_identity_provider: ${{ secrets.WIF_PROVIDER }}
          token_format: "access_token"
      - name: Login to Artifact Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGION }}-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}
      - name: Publish to GCP Artifact Registry
        uses: docker/build-push-action@v2
        with:
          secrets: |
            "VITE_REACT_APP_FIREBASE_API_KEY=${{ secrets.VITE_REACT_APP_FIREBASE_API_KEY }}"
            "VITE_REACT_APP_FIREBASE_AUTH_DOMAIN=${{ secrets.VITE_REACT_APP_FIREBASE_AUTH_DOMAIN }}"
            "VITE_REACT_APP_FIREBASE_DATABASE_URL=${{ secrets.VITE_REACT_APP_FIREBASE_DATABASE_URL }}"
            "VITE_REACT_APP_FIREBASE_PROJECT_ID=${{ secrets.VITE_REACT_APP_FIREBASE_PROJECT_ID }}"
            "VITE_REACT_APP_FIREBASE_STORAGE_BUCKET=${{ secrets.VITE_REACT_APP_FIREBASE_STORAGE_BUCKET }}"
            "VITE_REACT_APP_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.VITE_REACT_APP_FIREBASE_MESSAGING_SENDER_ID }}"
            "VITE_REACT_APP_FIREBASE_APP_ID=${{ secrets.VITE_REACT_APP_FIREBASE_APP_ID }}"
            "VITE_REACT_APP_API_URL=${{ secrets.VITE_REACT_APP_API_URL }}"
          context: vision-canvas-web
          push: true
          tags: ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.AR_NAME }}/${{ env.PROJECT_ID }}-${{ env.AR_NAME }}:latest
    if: ${{ github.ref == 'refs/heads/main' }}
  deploy:
    permissions:
      contents: "read"
      id-token: "write"
    needs: build_main
    runs-on: ubuntu-latest
    env:
      PORT: 5173
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Authenticate with GCP
        uses: google-github-actions/auth@v1
        with:
          project_id: ${{ env.PROJECT_ID }}
          service_account: ${{ secrets.SA_EMAIL }}
          workload_identity_provider: ${{ secrets.WIF_PROVIDER }}
          token_format: "access_token"
      - name: Deploy to Cloud Run
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          region: ${{ env.REGION }}
          service: ${{ env.PROJECT_ID }}-${{ env.AR_NAME }}
          image: ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.AR_NAME }}/${{ env.PROJECT_ID }}-${{ env.AR_NAME }}:latest
    if: ${{ github.ref == 'refs/heads/main' }}
